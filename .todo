Features:
    ☐ Add check for download/update of canonical data with data preprocessing
    ☐ Add CLI
    ☐ Add config
        see https://www.reddit.com/r/rust/comments/ec741e/config_files_vs_env_variables_vs_dotenv/
        "In an ideal world, you use a config file (format irrelevant really, though yaml is probably the most common in modern tools - for better and worse) and maintain the ability to override via env vars and via cli flags (typically in that order).

        That's how most people will expect an application to behave, anyway."
    ☐ Add option to gather all possible information with only 1 api call to make the app faster
        - Can't get release group's artist-credit and maybe others
    ☐ Replace `ratings` by `user ratings`
    ☐ Find a way to delete unused releases and recording (they are added earlier but are not relevant anymore after some database update)
        - We can't delete every release/recording that has not just been added because they might belong to not updated artists
        - Probably just process artists 1 by 1 and delete every release/recording that is not in the new data for each updated artist
    ☐ Support adding artists with the script instead of only from Notion UI
    ☐ Toggle `To update` off only after successfully updating the release and recordings
    ☐ Add `secondary type` to releases
    ☐ Enable loging in MusicBrainz and update `ratings` (and `tags`??) directly from notion

Bugs:

Code Improvement:
    ☐ Replace logging message by errors?
    ☐ Delete `release_mbid` column in `canonical_release_redirect.py` after downloading, and remove duplicate
    ☐ Same with `recording_mbid` in `canonical_recording_redirect.py`
    ☐ Checking if we raise errors when exception is caught
    ☐ Adding code in `else` block when no excpetion is caught
    ☐ Remove `try`/`except` when it's not the direct client call
    ☐ Add type for MusicBrainz response

Tests:

Final:
    ☐ Update `pyproject.toml`
        ☐ Keywords, classifiers, etc
        ☐ Add entry points
            see: https://hatch.pypa.io/1.9/config/metadata/#entry-points
    ☐ Update `README.md`
    ☐ Disable library logging
        see: https://github.com/Delgan/loguru/issues/349 and https://loguru.readthedocs.io/en/stable/api/logger.html#loguru._logger.Logger.disable
